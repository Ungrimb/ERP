// <auto-generated />
using System;
using ERP.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ERP.Migrations
{
    [DbContext(typeof(ERPContext))]
    partial class ERPContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0-rc.1.20451.13");

            modelBuilder.Entity("ERP.Models.Categoria", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("ERP.Models.Cliente", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Province")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Surname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("ERP.Models.Empleado", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Surname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("ERP.Models.LineasPedido", b =>
                {
                    b.Property<long>("IdLinea")
                        .HasColumnType("bigint")
                        .HasColumnName("idLinea");

                    b.Property<long>("IdPedido")
                        .HasColumnType("bigint")
                        .HasColumnName("idPedido");

                    b.Property<long>("IdProducto")
                        .HasColumnType("bigint")
                        .HasColumnName("idProducto");

                    b.HasKey("IdLinea");

                    b.HasIndex("IdPedido");

                    b.HasIndex("IdProducto");

                    b.ToTable("LineasPedido");
                });

            modelBuilder.Entity("ERP.Models.Pedido", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("AssingDate")
                        .HasColumnType("datetime")
                        .HasColumnName("assingDate");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<DateTime?>("FinishDate")
                        .HasColumnType("datetime")
                        .HasColumnName("finishDate");

                    b.Property<long?>("IdCostumer")
                        .HasColumnType("bigint")
                        .HasColumnName("idCostumer");

                    b.Property<long?>("IdEmployee")
                        .HasColumnType("bigint")
                        .HasColumnName("idEmployee");

                    b.Property<string>("Priority")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true);

                    b.Property<string>("State")
                        .HasMaxLength(15)
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true);

                    b.HasKey("Id");

                    b.HasIndex("IdCostumer");

                    b.HasIndex("IdEmployee");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("ERP.Models.Producto", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("IdCategory")
                        .HasColumnType("bigint")
                        .HasColumnName("idCategory");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("IdCategory");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("ERP.Models.LineasPedido", b =>
                {
                    b.HasOne("ERP.Models.Pedido", "IdPedidoNavigation")
                        .WithMany("LineasPedidos")
                        .HasForeignKey("IdPedido")
                        .HasConstraintName("FK_LineasPedido_Pedidos")
                        .IsRequired();

                    b.HasOne("ERP.Models.Producto", "IdProductoNavigation")
                        .WithMany("LineasPedidos")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("FK_LineasPedido_Productos")
                        .IsRequired();

                    b.Navigation("IdPedidoNavigation");

                    b.Navigation("IdProductoNavigation");
                });

            modelBuilder.Entity("ERP.Models.Pedido", b =>
                {
                    b.HasOne("ERP.Models.Cliente", "IdCostumerNavigation")
                        .WithMany("Pedidos")
                        .HasForeignKey("IdCostumer")
                        .HasConstraintName("FK_Pedidos_Clientes");

                    b.HasOne("ERP.Models.Empleado", "IdEmployeeNavigation")
                        .WithMany("Pedidos")
                        .HasForeignKey("IdEmployee")
                        .HasConstraintName("FK_Pedidos_Empleados1");

                    b.Navigation("IdCostumerNavigation");

                    b.Navigation("IdEmployeeNavigation");
                });

            modelBuilder.Entity("ERP.Models.Producto", b =>
                {
                    b.HasOne("ERP.Models.Categoria", "IdCategoryNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("IdCategory")
                        .HasConstraintName("FK_Productos_Categorias");

                    b.Navigation("IdCategoryNavigation");
                });

            modelBuilder.Entity("ERP.Models.Categoria", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("ERP.Models.Cliente", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("ERP.Models.Empleado", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("ERP.Models.Pedido", b =>
                {
                    b.Navigation("LineasPedidos");
                });

            modelBuilder.Entity("ERP.Models.Producto", b =>
                {
                    b.Navigation("LineasPedidos");
                });
#pragma warning restore 612, 618
        }
    }
}
